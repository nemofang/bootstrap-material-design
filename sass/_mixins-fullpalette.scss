@import 'functions';

// given a color build multiples dephs
@mixin generic-variations-factory-deep($material-color-name, $material-color-number: null, $extra: null) {
  &-material-#{$material-color-name}#{$material-color-number}#{$extra} {
    $material-color-full-name: #{$material-color-name}#{$material-color-number} !global;
    $material-color: get-color($material-color-full-name) !global;
    $text-color: contrast-color($material-color, $darkbg-text, $lightbg-text) !global;
    @content;
  }
}

@mixin generic-variations-factory($material-color-name, $extra: null) {
  @include generic-variations-factory-deep($material-color-name, null, $extra) { @content; }
  @include generic-variations-factory-deep($material-color-name, "-50", $extra) { @content; }
  @include generic-variations-factory-deep($material-color-name, "-100", $extra) { @content; }
  @include generic-variations-factory-deep($material-color-name, "-200", $extra) { @content; }
  @include generic-variations-factory-deep($material-color-name, "-300", $extra) { @content; }
  @include generic-variations-factory-deep($material-color-name, "-400", $extra) { @content; }
  @include generic-variations-factory-deep($material-color-name, "-500", $extra) { @content; }
  @include generic-variations-factory-deep($material-color-name, "-600", $extra) { @content; }
  @include generic-variations-factory-deep($material-color-name, "-700", $extra) { @content; }
  @include generic-variations-factory-deep($material-color-name, "-800", $extra) { @content; }
  @include generic-variations-factory-deep($material-color-name, "-900", $extra) { @content; }
  @include generic-variations-factory-deep($material-color-name, "-A100", $extra) { @content; }
  @include generic-variations-factory-deep($material-color-name, "-A200", $extra) { @content; }
  @include generic-variations-factory-deep($material-color-name, "-A400", $extra) { @content; }
  @include generic-variations-factory-deep($material-color-name, "-A700", $extra) { @content; }
}

//
// To use this mixin you should pass a content block as final parameter to define
// the style. In that definition you can use the following variables to define it.
//
// $material-color-name ---> "red", "green", "indigo" ...
// $material-color-full-name ---> "red", "green-50", "indigo-400" ...
// $material-color ---> #f44336, #e8f5e9, #5c6bc0 ...
// $text-color ---> rgba(255,255,255,0.84), rgba(0,0,0,0.84), rgba(255,255,255,0.84) ...
//

@mixin generic-variations($extra, $default) {
  // $contrast-factor: 40%;
  // bootstrap styles
  &#{$extra}, &-default#{$extra} {
    $material-color-name: "default" !global;
    $material-color-full-name: $material-color-name !global;
    $material-color: $default !global;
    $text-color: $darkbg-text !global;
    @content;
  }
  &-black#{$extra} {
    $material-color-name: "black" !global;
    $material-color-full-name: $material-color-name !global;
    $material-color: $black !global;
    $text-color: $darkbg-text !global;
    @content;
  }
  &-white#{$extra} {
    $material-color-name: "white" !global;
    $material-color-full-name: $material-color-name !global;
    $material-color: $white !global;
    $text-color: $lightbg-text !global;
    @content;
  }
  &-inverse#{$extra} {
    $material-color-name: "inverse" !global;
    $material-color-full-name: $material-color-name !global;
    $material-color: $inverse !global;
    $text-color: contrast-color($inverse, $lightbg-text, $darkbg-text) !global;
    @content;
  }
  &-primary#{$extra} {
    $material-color-name: "primary" !global;
    $material-color-full-name: $material-color-name !global;
    $material-color: $primary !global;
    $text-color: $darkbg-text !global;
    @content;
  }
  &-success#{$extra} {
    $material-color-name: "success" !global;
    $material-color-full-name: $material-color-name !global;
    $material-color: $success !global;
    $text-color: $darkbg-text !global;
    @content;
  }
  &-info#{$extra} {
    $material-color-name: "info" !global;
    $material-color-full-name: $material-color-name !global;
    $material-color: $info !global;
    $text-color: $darkbg-text !global;
    @content;
  }
  &-warning#{$extra} {
    $material-color-name: "warning" !global;
    $material-color-full-name: $material-color-name !global;
    $material-color: $warning !global;
    $text-color: $darkbg-text !global;
    @content;
  }
  &-danger#{$extra} {
    $material-color-name: "danger" !global;
    $material-color-full-name: $material-color-name !global;
    $material-color: $danger !global;
    $text-color: $darkbg-text !global;
    @content;
  }

  // Generate the variations color
  @include generic-variations-factory("red", $extra) { @content; }
  @include generic-variations-factory("pink", $extra) { @content; }
  @include generic-variations-factory("purple", $extra) { @content; }
  @include generic-variations-factory("deep-purple", $extra) { @content; }
  @include generic-variations-factory("indigo", $extra) { @content; }
  @include generic-variations-factory("blue", $extra) { @content; }
  @include generic-variations-factory("light-blue", $extra) { @content; }
  @include generic-variations-factory("cyan", $extra) { @content; }
  @include generic-variations-factory("teal", $extra) { @content; }
  @include generic-variations-factory("green", $extra) { @content; }
  @include generic-variations-factory("light-green", $extra) { @content; }
  @include generic-variations-factory("lime", $extra) { @content; }
  @include generic-variations-factory("yellow", $extra) { @content; }
  @include generic-variations-factory("amber", $extra) { @content; }
  @include generic-variations-factory("orange", $extra) { @content; }
  @include generic-variations-factory("deep-orange", $extra) { @content; }
  @include generic-variations-factory("brown", $extra) { @content; }
  @include generic-variations-factory("grey", $extra) { @content; }
  @include generic-variations-factory("blue-grey", $extra) { @content; }
}

// usage: @include variations(" .check", color, transparent);
@mixin variations($extra, $property, $default) {
  @include generic-variations($extra, $default) {
    #{$property}: $material-color;
  }
}

@mixin background-variations($extra, $default) {
  @include generic-variations($extra, $default) {
    background-color: $material-color;
    color: $text-color;
    & {
      @if ($material-color == $btn-default) {
        color: $lightbg-text;
      }
    }
  }
}

@mixin text-variations($extra, $default) {
  @include generic-variations($extra, $default) {
    color: $material-color;
  }
}

$all-variations: #{"-default, -primary, -info, -success, -warning, -danger"};
